# Docker Compose file for remote deployment
version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: library-postgres
    environment:
      POSTGRES_DB: library_db
      POSTGRES_USER: libraryuser
      POSTGRES_PASSWORD: librarypass123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U libraryuser"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  app:
    # Image sẽ được pull từ Docker Hub sau khi GitHub Actions push
    image: baoquoc/library-management:latest
    container_name: library-app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/library_db
      - SPRING_DATASOURCE_USERNAME=libraryuser
      - SPRING_DATASOURCE_PASSWORD=librarypass123
      - SPRING_PROFILES_ACTIVE=prod
      - JAVA_OPTS=-Xms256m -Xmx512m
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # Optional: Add ELK stack for monitoring
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    container_name: library-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.3
    container_name: library-kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    restart: unless-stopped

volumes:
  postgres_data:
  elasticsearch_data:

networks:
  default:
    name: library-network
